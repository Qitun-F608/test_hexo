<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo搭建静态网站</title>
    <link href="/2023/11/27/Hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/"/>
    <url>/2023/11/27/Hexo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h1 id="静态博客搭建工具汇总"><a href="#静态博客搭建工具汇总" class="headerlink" title="静态博客搭建工具汇总"></a>静态博客搭建工具汇总</h1><p>CHATGPT：<br>在静态博客搭建工具中，有五个相对较为流行和被广泛采用的工具是：</p><ul><li>Jekyll：作为最早和最流行的静态网站生成器之一，Jekyll 有着强大的社区支持和丰富的主题插件。它易于上手，适合于各种规模的网站和博客。</li><li>Hexo：基于 Node.js 的快速、简单的静态网站生成器，它的速度快、支持插件和主题，受到开发者和博客作者的青睐。</li><li>Gatsby：Gatsby 是一个基于 React 构建的静态网站生成器，其强大的功能和性能优势适合于需要更复杂功能和高性能网站的用户。</li><li>Hugo：Hugo 是一个速度非常快的静态网站生成器，它的简单性和高性能使得它备受欢迎，特别适合于快速建站和简单博客。</li><li>VuePress：VuePress 是 Vue.js 的静态网站生成器，尤其适用于文档和技术博客，由于其简洁性和易用性也备受欢迎。</li></ul><p class="note note-success">至于搭建技术文档，推荐Docsify和Read the Docs<p>Read the Docs：</p><ul><li>适用场景：主要适用于开源项目和技术文档，能够与GitHub等版本控制系统集成，支持自动化构建文档。</li><li>自动化构建：Read the Docs 能够从代码仓库中自动拉取文档源文件（通常是 reStructuredText 或者 Markdown 格式），然后构建并发布文档。</li><li>版本控制：支持文档版本控制，可以为每个代码提交或版本标签自动生成和发布相应版本的文档。</li><li>用户体验：提供了良好的阅读体验，支持搜索、目录结构、主题定制等。</li></ul><p>Docsify：</p><ul><li>轻量级：Docsify 是一个简单、轻量级的文档网站生成器，使用Markdown编写文档，无需构建过程。</li><li>简单易用：Docsify 直接在浏览器中渲染Markdown文件，无需专门的编译步骤，易于上手。</li><li>自定义性：提供了一些自定义主题和插件，但相对于其他工具可能功能稍显有限。</li><li>适用场景：适合快速搭建技术文档网站，特别适用于个人项目或小型团队的文档管理。</li></ul><p>比较与选择：</p><ul><li>如果你的项目是开源的、需要与代码仓库结合、希望实现自动化构建，并提供完整的版本控制和良好的阅读体验，Read the Docs可能更适合你。</li><li>如果你需要一个简单快速的方式来搭建技术文档网站，Docsify提供了一种无需复杂设置的轻量级解决方案。</li><li>总体而言，选择哪个工具要根据你的项目需求、团队习惯和个人偏好来决定。Read the Docs 更专注于开源项目和自动化构建，而 Docsify 则更侧重于快速搭建简单的技术文档网站。</li></ul></p><h1 id="Hexo-搭建"><a href="#Hexo-搭建" class="headerlink" title="Hexo 搭建"></a>Hexo 搭建</h1><p>PS：Hexo 官方文档这部分写的很拉跨且过时。</p><ul><li>准备工作<ul><li>安装 NodeJS、git<ul><li>测试是否安装成功。</li></ul></li><li>准备 github</li><li>注册 github</li><li>新建仓库，命名为 <code>&lt;YourUserName&gt;.github.io</code> </li><li><a href="https://docs.github.com/zh/get-started/quickstart/set-up-git">设置 Git （包含配置 <code>SSH key</code>）- GitHub 文档</a></li></ul></li><li>安装 Hexo<ul><li><code>npm install -g hexo-cli</code></li></ul></li><li>搭建<ul><li>建立文件夹 <code>G:\myDEMO</code>，在里面进入终端。<ul><li><code>hexo init</code></li><li><code>npm install</code></li></ul></li><li>测试初始化是否完成。<ul><li><code>hexo s</code> </li><li>浏览器访问 <code>http://localhost:4000</code> 看是否搭建成功。</li></ul></li></ul></li><li>部署到 Github <ul><li>打开 <code>G:\myDEMO</code> 下的 <code>_config.yml</code> 配置文件，最下面填写如下配置。<ul><li>见下面的代码块。</li></ul></li><li>安装部署插件 <code>hexo-deployer-git</code> <ul><li><code>npm install hexo-deployer-git --save</code></li></ul></li><li>部署上传：<ul><li><code>hexo cl    // 清除之前建立的靜態檔案</code></li><li><code>$ hexo g     // 建立靜態頁面，在publish文件夹下</code></li><li><code>$ hexo d     // 部署至 GitHub</code></li></ul></li><li>然后在 github 仓库就可以看见上传的文件。过一会就可以在 <code> https://&lt;YourUserName&gt;.github.io</code> 看见网站内容。</li></ul></li></ul><p>在 <code>_config.yml</code> 配置文件：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># Deployment</span><br><span class="hljs-comment">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repo:</span> <span class="hljs-string">git@github.com:Qitun-F608/Qitun-F608.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">main</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">&quot;Test...&quot;</span><br></code></pre></td></tr></table></figure><p>本地查看：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs cmd">$ hexo generate # 生成静态文件，可简写为 hexo g<br>$ hexo server # 启动服务器。默认情况下，访问网址为：`http://localhost:<span class="hljs-number">4000</span>/`。可以简写为 hexo s<br></code></pre></td></tr></table></figure><p>PS：我之前一直部署不成功，因为</p><ul><li>之前是 github 上没有加公匙。我一直以为加了。</li><li>然后然后是旧的密匙密码忘了。</li><li>最后重新<a href="https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent">生成新的 SSH 密钥并将其添加到 ssh-agent - GitHub 文档</a> 然后就可以 <code>hexo d</code> 了。</li></ul><h2 id="A-主题的更改"><a href="#A-主题的更改" class="headerlink" title="A. 主题的更改"></a>A. 主题的更改</h2><p>我用这个 <a href="https://hexo.fluid-dev.com/docs/start/">Hexo Fluid</a><br>其它的感觉没找到啥好看的。</p><p>更改过程，具体看 <a href="https://hexo.fluid-dev.com/docs/start/">这个文档Hexo Fluid</a> ，比以下内容详细很多。</p><ul><li>下载<ul><li>在 <code>G:\myDEMO</code> 里面进入终端。执行 <code>npm install --save hexo-theme-fluid</code></li><li>在 <code>G:\myDEMO</code> 下创建 <code>_config.fluid.yml</code>，复制 <a href="https://github.com/fluid-dev/hexo-theme-fluid/blob/master/_config.yml">这个网站的_config.yml</a>  的内容</li></ul></li><li>指定主题<ul><li>修改在 <code>G:\myDEMO</code> 下的 <code>_config.yml</code><ul><li><code>theme: fluid  # 指定主题</code></li></ul></li></ul></li><li>一些初始化<ul><li>创建「关于页」 <code>hexo new page about</code></li><li>创建成功后修改 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。<code>layout: about</code></li></ul></li></ul><hr><p><a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">配置指南 | Hexo Fluid 用户手册</a> </p><ul><li><p>站点配置：根目录下的 <code>_config.yml</code> </p></li><li><p>主题配置：根目录下的 <code>_config.fluid.yml</code> </p></li><li><p>只要存在于 <code>_config.fluid.yml</code> 的配置都是高优先级</p></li></ul><h1 id="Hexo-的使用"><a href="#Hexo-的使用" class="headerlink" title="Hexo 的使用"></a>Hexo 的使用</h1><p>新建网站：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cmd">hexo init [folder] <br>//新建一个网站。<br>//如果没有设置 `folder` ，Hexo 默认在目前的文件夹建立网站。<br></code></pre></td></tr></table></figure><p>新建文章：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cmd">hexo new [layout] &lt;<span class="hljs-built_in">title</span>&gt; -para<br>//新建一篇文章。<br>//如果标题包含空格的话，请使用引号括起来。<br>//如果没有设置 `layout` 的话，默认使用 _config.yml中的 `default_layout` 参数代替。<br></code></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--path</code></td><td>自定义新文章的路径</td></tr><tr><td><code>-r</code>, <code>--replace</code></td><td>如果存在同名文章，将其替换</td></tr><tr><td><code>-s</code>, <code>--slug</code></td><td>文章的 Slug，作为新文章的文件名和发布后的 URL</td></tr></tbody></table><p>具体查看：<a href="https://hexo.io/zh-cn/docs/commands.html">指令 | Hexo</a> </p>]]></content>
    
    
    
    <tags>
      
      <tag>skills</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
